-- CRIAR TABELAS E RESTRIÇÕES --

CREATE TABLE Endereco (
    Cod_End SERIAL PRIMARY KEY,
    Logradouro VARCHAR(100) NOT NULL,
    Numero INT NOT NULL,
    Bairro VARCHAR(50) NOT NULL,
    Cidade VARCHAR(50),
    Complemento VARCHAR(100),
    CEP VARCHAR(8)
);

CREATE TABLE Departamento (
    Cod_Dep SERIAL PRIMARY KEY,
    Nome_Dep VARCHAR(50) NOT NULL,
    Email_Dep VARCHAR(50),
    Tel_Cel_Dep VARCHAR(14)
);

CREATE TABLE Professor (
    Cod_Prof SERIAL PRIMARY KEY,
    Nome_Prof VARCHAR(40) NOT NULL,
    Sobrenome_Prof VARCHAR(50) NOT NULL,
    CPF_Prof VARCHAR(11) NOT NULL,
    Genero_Prof VARCHAR(1) CHECK (Genero_Prof IN ('M', 'F', 'N')),
    Cod_Dep INT,
    Email_Prof VARCHAR(40),
    Tel_Cel_Prof VARCHAR(14), -- Modelo +55__9________
    CONSTRAINT fk_Cod_Dep_Prof FOREIGN KEY (Cod_Dep) REFERENCES Departamento (Cod_Dep) 
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Curso (
    Cod_Curso SERIAL PRIMARY KEY,
    Nome_Curso VARCHAR(50),
    Cod_Dep INT,
    CONSTRAINT fk_Cod_Dep_Curso FOREIGN KEY (Cod_Dep) REFERENCES Departamento (Cod_Dep)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Disciplina (
    Cod_Disc SERIAL PRIMARY KEY,
    Cod_Disc_Requer INT,
    Nome_Disc VARCHAR(100) NOT NULL,
    Cod_Dep INT NOT NULL,
    CH INT,
    Descricao VARCHAR(300),
    Num_Alu_Disc INT DEFAULT 0,
    CONSTRAINT fk_Cod_Dep_Disc FOREIGN KEY (Cod_Dep) REFERENCES Departamento (Cod_Dep)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Disc FOREIGN KEY (Cod_Disc_Requer) REFERENCES Disciplina (Cod_Disc)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Turma (
    Cod_Tur SERIAL PRIMARY KEY,
    Cod_Disc INT NOT NULL,
    Cod_Prof INT NOT NULL,
    Num_Alu_Tur INT DEFAULT 0,
    Hora_Inicio TIME,
    Hora_Fim TIME,
    CONSTRAINT fk_Cod_Disc_Tur FOREIGN KEY (Cod_Disc) REFERENCES Disciplina (Cod_Disc)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Prof_Tur FOREIGN KEY (Cod_Prof) REFERENCES Professor (Cod_Prof)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Aluno (
    RA SERIAL PRIMARY KEY,
    Nome_Alu VARCHAR(40) NOT NULL,
    Sobrenome_Alu VARCHAR(50) NOT NULL,
    CPF_ALu VARCHAR(11) NOT NULL,
    Genero_Alu VARCHAR(1) CHECK (Genero_Alu IN ('M', 'F', 'N')),
    Cod_Curso INT NOT NULL,
    Nome_Pai VARCHAR(90),
    Nome_Mae VARCHAR(90),
    Email_Alu VARCHAR(50),
    Tel_Cel_Alu VARCHAR(14), -- Modelo +55__9________
    CONSTRAINT fk_Cod_Curso_Alu FOREIGN KEY (Cod_Curso) REFERENCES Curso (Cod_Curso)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Historico (
    Cod_Hist SERIAL PRIMARY KEY,
    RA INT NOT NULL,
    Data_Inicio DATE NOT NULL,
    Data_Final DATE,
    CONSTRAINT fk_RA_Hist FOREIGN KEY (RA) REFERENCES Aluno (RA)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Aluno_Disc (
    RA INT NOT NULL,
    Cod_Disc INT NOT NULL,
    PRIMARY KEY (RA, Cod_Disc),
    CONSTRAINT fk_RA_Alu FOREIGN KEY (RA) REFERENCES Aluno (RA)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Disc_Alu FOREIGN KEY (Cod_Disc) REFERENCES Disciplina (Cod_Disc)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Aluno_Turma (
    RA INT NOT NULL,
    Cod_Tur INT NOT NULL,
    PRIMARY KEY (RA, Cod_Tur),
    CONSTRAINT fk_RA_Alu FOREIGN KEY (RA) REFERENCES Aluno (RA)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Tur_Alu FOREIGN KEY (Cod_Tur) REFERENCES Turma (Cod_Tur)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Curso_Disc (
    Cod_Curso INT NOT NULL,
    Cod_Disc INT NOT NULL,
    PRIMARY KEY (Cod_Curso, Cod_Disc),
    CONSTRAINT fk_Cod_Curso_Disc FOREIGN KEY (Cod_Curso) REFERENCES Curso (Cod_Curso)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Disc_Curso FOREIGN KEY (Cod_Disc) REFERENCES Disciplina (Cod_Disc)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Disc_Hist (
    Cod_Disc INT NOT NULL,
    Cod_Hist INT NOT NULL,
    Nota REAL,
    Frequencia REAL, -- Porcentagem sem o "%"
    Aprovado VARCHAR(1) CHECK (Aprovado IN ('S', 'N')),
    PRIMARY KEY (Cod_Disc, Cod_Hist),
    CONSTRAINT fk_Cod_Disc_Hist FOREIGN KEY (Cod_Disc) REFERENCES Disciplina (Cod_Disc)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Hist_Disc FOREIGN KEY (Cod_Hist) REFERENCES Historico (Cod_Hist)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE Prof_Disc (
    Cod_Prof INT NOT NULL,
    Cod_Disc INT NOT NULL,
    PRIMARY KEY (Cod_Prof, Cod_Disc),
    CONSTRAINT fk_Cod_Prof_Disc FOREIGN KEY (Cod_Prof) REFERENCES Professor (Cod_Prof)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Disc_Prof FOREIGN KEY (Cod_Disc) REFERENCES Disciplina (Cod_Disc)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE End_Prof (
    Cod_End INT NOT NULL,
    Cod_Prof INT NOT NULL,
    PRIMARY KEY (Cod_End, Cod_Prof),
    CONSTRAINT fk_Cod_End_Prof FOREIGN KEY (Cod_End) REFERENCES Endereco (Cod_End)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Prof_End FOREIGN KEY (Cod_Prof) REFERENCES Professor (Cod_Prof)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE End_Dep (
    Cod_End INT NOT NULL,
    Cod_Dep INT NOT NULL,
    PRIMARY KEY (Cod_End, Cod_Dep),
    CONSTRAINT fk_Cod_End_Dep FOREIGN KEY (Cod_End) REFERENCES Endereco (Cod_End)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_Cod_Dep_End FOREIGN KEY (Cod_Dep) REFERENCES Departamento (Cod_Dep)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);

CREATE TABLE End_Alu (
    Cod_End INT NOT NULL,
    RA INT NOT NULL,
    PRIMARY KEY (Cod_End, RA),
    CONSTRAINT fk_Cod_End_Alu FOREIGN KEY (Cod_End) REFERENCES Endereco (Cod_End)
    ON DELETE CASCADE 
    ON UPDATE CASCADE,
    CONSTRAINT fk_RA_End FOREIGN KEY (RA) REFERENCES Aluno (RA)
    ON DELETE CASCADE 
    ON UPDATE CASCADE
);


-- Limita as disciplinas máximas possíveis de cursar por semestre em 7:
CREATE OR REPLACE FUNCTION limite_disciplinas_aluno()
RETURNS TRIGGER AS $$
BEGIN
    -- Conta quantas disciplinas o aluno já está matriculado
    IF (SELECT COUNT(*) 
        FROM Aluno_Disc ad
        WHERE ad.RA = NEW.RA) >= 7 THEN
        RAISE EXCEPTION 'O aluno já está matriculado em 7 disciplinas neste semestre';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_limite_disciplinas_aluno
BEFORE INSERT ON Aluno_Disc
FOR EACH ROW
EXECUTE FUNCTION limite_disciplinas_aluno();

-- Limita o número máximo de alunos por turma em 40:
CREATE OR REPLACE FUNCTION limite_alunos_turma()
RETURNS TRIGGER AS $$
BEGIN
    -- Conta quantos alunos já estão matriculados na turma
    IF (SELECT COUNT(*) FROM Aluno_Turma WHERE Cod_Tur = NEW.Cod_Tur) >= 40 THEN
        RAISE EXCEPTION 'A turma já possui 40 alunos matriculados';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_limite_alunos_turma
BEFORE INSERT ON Aluno_Turma
FOR EACH ROW
EXECUTE FUNCTION limite_alunos_turma();

-- Limita o número máximo de disciplinas que um professor pode lecionar (5 disciplinas no máximo):
CREATE OR REPLACE FUNCTION limite_disciplinas_professor()
RETURNS TRIGGER AS $$
BEGIN
    -- Conta quantas disciplinas o professor já está lecionando
    IF (SELECT COUNT(*) FROM Prof_Disc WHERE Cod_Prof = NEW.Cod_Prof) >= 5 THEN
        RAISE EXCEPTION 'O professor já está lecionando 5 disciplinas';
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_limite_disciplinas_professor
BEFORE INSERT ON Prof_Disc
FOR EACH ROW
EXECUTE FUNCTION limite_disciplinas_professor();


-- Automatizar contagem de alunos por disciplina e turma
CREATE OR REPLACE FUNCTION atualizar_num_alunos_disciplina()
RETURNS TRIGGER AS $$
BEGIN
    -- Atualiza o número de alunos na disciplina
    IF TG_OP = 'INSERT' THEN
        UPDATE Disciplina
        SET Num_Alu_Disc = Num_Alu_Disc + 1
        WHERE Cod_Disc = NEW.Cod_Disc;
    ELSIF TG_OP = 'DELETE' THEN
        UPDATE Disciplina
        SET Num_Alu_Disc = Num_Alu_Disc - 1
        WHERE Cod_Disc = OLD.Cod_Disc;
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_atualizar_num_alunos_disciplina
AFTER INSERT OR DELETE ON Aluno_Disc
FOR EACH ROW
EXECUTE FUNCTION atualizar_num_alunos_disciplina();


CREATE OR REPLACE FUNCTION atualizar_num_alunos_turma()
RETURNS TRIGGER AS $$
BEGIN
    -- Atualiza o número de alunos na turma
    IF TG_OP = 'INSERT' THEN
        UPDATE Turma
        SET Num_Alu_Tur = Num_Alu_Tur + 1
        WHERE Cod_Tur = NEW.Cod_Tur;
    ELSIF TG_OP = 'DELETE' THEN
        UPDATE Turma
        SET Num_Alu_Tur = Num_Alu_Tur - 1
        WHERE Cod_Tur = OLD.Cod_Tur;
    END IF;

    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER trg_atualizar_num_alunos_turma
AFTER INSERT OR DELETE ON Aluno_Turma
FOR EACH ROW
EXECUTE FUNCTION atualizar_num_alunos_turma();

-- Garante os padrões nas PKs das tabelas princi´pais
SELECT setval('Endereco_Cod_End_seq', 231, false);
SELECT setval('Departamento_Cod_Dep_seq', 11, false);
SELECT setval('Professor_Cod_Prof_seq', 1, false);
SELECT setval('Curso_Cod_Curso_seq', 31, false);
SELECT setval('Disciplina_Cod_Disc_seq', 1, false);
SELECT setval('Turma_Cod_Tur_seq', 1, false);
SELECT setval('Aluno_RA_seq', 101, false);
SELECT setval('Historico_Cod_Hist_seq', 1, false);

-- POPULAR TABELAS --

INSERT INTO endereco (logradouro, numero, bairro, cidade, complemento, cep)
VALUES
('Logradouro 1', 1, 'Bairro 1', 'Cidade 1', 'Complemento 1', '00000001'),
('Logradouro 2', 2, 'Bairro 2', 'Cidade 2', 'Complemento 2', '00000002'),
('Logradouro 3', 3, 'Bairro 3', 'Cidade 3', 'Complemento 3', '00000003'),
('Logradouro 4', 4, 'Bairro 4', 'Cidade 4', 'Complemento 4', '00000004'),
('Logradouro 5', 5, 'Bairro 5', 'Cidade 5', 'Complemento 5', '00000005'),
('Logradouro 6', 6, 'Bairro 6', 'Cidade 6', 'Complemento 6', '00000006'),
('Logradouro 7', 7, 'Bairro 7', 'Cidade 7', 'Complemento 7', '00000007'),
('Logradouro 8', 8, 'Bairro 8', 'Cidade 8', 'Complemento 8', '00000008'),
('Logradouro 9', 9, 'Bairro 9', 'Cidade 9', 'Complemento 9', '00000009'),
('Logradouro 10', 10, 'Bairro 10', 'Cidade 10', 'Complemento 10', '00000010'),
('Logradouro 11', 11, 'Bairro 11', 'Cidade 11', 'Complemento 11', '00000011'),
('Logradouro 12', 12, 'Bairro 12', 'Cidade 12', 'Complemento 12', '00000012'),
('Logradouro 13', 13, 'Bairro 13', 'Cidade 13', 'Complemento 13', '00000013'),
('Logradouro 14', 14, 'Bairro 14', 'Cidade 14', 'Complemento 14', '00000014'),
('Logradouro 15', 15, 'Bairro 15', 'Cidade 15', 'Complemento 15', '00000015'),
('Logradouro 16', 16, 'Bairro 16', 'Cidade 16', 'Complemento 16', '00000016'),
('Logradouro 17', 17, 'Bairro 17', 'Cidade 17', 'Complemento 17', '00000017'),
('Logradouro 18', 18, 'Bairro 18', 'Cidade 18', 'Complemento 18', '00000018'),
('Logradouro 19', 19, 'Bairro 19', 'Cidade 19', 'Complemento 19', '00000019'),
('Logradouro 20', 20, 'Bairro 20', 'Cidade 20', 'Complemento 20', '00000020'),
('Logradouro 21', 21, 'Bairro 21', 'Cidade 21', 'Complemento 21', '00000021'),
('Logradouro 22', 22, 'Bairro 22', 'Cidade 22', 'Complemento 22', '00000022'),
('Logradouro 23', 23, 'Bairro 23', 'Cidade 23', 'Complemento 23', '00000023'),
('Logradouro 24', 24, 'Bairro 24', 'Cidade 24', 'Complemento 24', '00000024'),
('Logradouro 25', 25, 'Bairro 25', 'Cidade 25', 'Complemento 25', '00000025'),
('Logradouro 26', 26, 'Bairro 26', 'Cidade 26', 'Complemento 26', '00000026'),
('Logradouro 27', 27, 'Bairro 27', 'Cidade 27', 'Complemento 27', '00000027'),
('Logradouro 28', 28, 'Bairro 28', 'Cidade 28', 'Complemento 28', '00000028'),
('Logradouro 29', 29, 'Bairro 29', 'Cidade 29', 'Complemento 29', '00000029'),
('Logradouro 30', 30, 'Bairro 30', 'Cidade 30', 'Complemento 30', '00000030'),
('Logradouro 31', 31, 'Bairro 31', 'Cidade 31', 'Complemento 31', '00000031'),
('Logradouro 32', 32, 'Bairro 32', 'Cidade 32', 'Complemento 32', '00000032'),
('Logradouro 33', 33, 'Bairro 33', 'Cidade 33', 'Complemento 33', '00000033'),
('Logradouro 34', 34, 'Bairro 34', 'Cidade 34', 'Complemento 34', '00000034'),
('Logradouro 35', 35, 'Bairro 35', 'Cidade 35', 'Complemento 35', '00000035'),
('Logradouro 36', 36, 'Bairro 36', 'Cidade 36', 'Complemento 36', '00000036'),
('Logradouro 37', 37, 'Bairro 37', 'Cidade 37', 'Complemento 37', '00000037'),
('Logradouro 38', 38, 'Bairro 38', 'Cidade 38', 'Complemento 38', '00000038'),
('Logradouro 39', 39, 'Bairro 39', 'Cidade 39', 'Complemento 39', '00000039'),
('Logradouro 40', 40, 'Bairro 40', 'Cidade 40', 'Complemento 40', '00000040'),
('Logradouro 41', 41, 'Bairro 41', 'Cidade 41', 'Complemento 41', '00000041'),
('Logradouro 42', 42, 'Bairro 42', 'Cidade 42', 'Complemento 42', '00000042'),
('Logradouro 43', 43, 'Bairro 43', 'Cidade 43', 'Complemento 43', '00000043'),
('Logradouro 44', 44, 'Bairro 44', 'Cidade 44', 'Complemento 44', '00000044'),
('Logradouro 45', 45, 'Bairro 45', 'Cidade 45', 'Complemento 45', '00000045'),
('Logradouro 46', 46, 'Bairro 46', 'Cidade 46', 'Complemento 46', '00000046'),
('Logradouro 47', 47, 'Bairro 47', 'Cidade 47', 'Complemento 47', '00000047'),
('Logradouro 48', 48, 'Bairro 48', 'Cidade 48', 'Complemento 48', '00000048'),
('Logradouro 49', 49, 'Bairro 49', 'Cidade 49', 'Complemento 49', '00000049'),
('Logradouro 50', 50, 'Bairro 50', 'Cidade 50', 'Complemento 50', '00000050'),
('Logradouro 51', 51, 'Bairro 51', 'Cidade 51', 'Complemento 51', '00000051'),
('Logradouro 52', 52, 'Bairro 52', 'Cidade 52', 'Complemento 52', '00000052'),
('Logradouro 53', 53, 'Bairro 53', 'Cidade 53', 'Complemento 53', '00000053'),
('Logradouro 54', 54, 'Bairro 54', 'Cidade 54', 'Complemento 54', '00000054'),
('Logradouro 55', 55, 'Bairro 55', 'Cidade 55', 'Complemento 55', '00000055'),
('Logradouro 56', 56, 'Bairro 56', 'Cidade 56', 'Complemento 56', '00000056'),
('Logradouro 57', 57, 'Bairro 57', 'Cidade 57', 'Complemento 57', '00000057'),
('Logradouro 58', 58, 'Bairro 58', 'Cidade 58', 'Complemento 58', '00000058'),
('Logradouro 59', 59, 'Bairro 59', 'Cidade 59', 'Complemento 59', '00000059'),
('Logradouro 60', 60, 'Bairro 60', 'Cidade 60', 'Complemento 60', '00000060'),
('Logradouro 61', 61, 'Bairro 61', 'Cidade 61', 'Complemento 61', '00000061'),
('Logradouro 62', 62, 'Bairro 62', 'Cidade 62', 'Complemento 62', '00000062'),
('Logradouro 63', 63, 'Bairro 63', 'Cidade 63', 'Complemento 63', '00000063'),
('Logradouro 64', 64, 'Bairro 64', 'Cidade 64', 'Complemento 64', '00000064'),
('Logradouro 65', 65, 'Bairro 65', 'Cidade 65', 'Complemento 65', '00000065'),
('Logradouro 66', 66, 'Bairro 66', 'Cidade 66', 'Complemento 66', '00000066'),
('Logradouro 67', 67, 'Bairro 67', 'Cidade 67', 'Complemento 67', '00000067'),
('Logradouro 68', 68, 'Bairro 68', 'Cidade 68', 'Complemento 68', '00000068'),
('Logradouro 69', 69, 'Bairro 69', 'Cidade 69', 'Complemento 69', '00000069'),
('Logradouro 70', 70, 'Bairro 70', 'Cidade 70', 'Complemento 70', '00000070'),
('Logradouro 71', 71, 'Bairro 71', 'Cidade 71', 'Complemento 71', '00000071'),
('Logradouro 72', 72, 'Bairro 72', 'Cidade 72', 'Complemento 72', '00000072'),
('Logradouro 73', 73, 'Bairro 73', 'Cidade 73', 'Complemento 73', '00000073'),
('Logradouro 74', 74, 'Bairro 74', 'Cidade 74', 'Complemento 74', '00000074'),
('Logradouro 75', 75, 'Bairro 75', 'Cidade 75', 'Complemento 75', '00000075'),
('Logradouro 76', 76, 'Bairro 76', 'Cidade 76', 'Complemento 76', '00000076'),
('Logradouro 77', 77, 'Bairro 77', 'Cidade 77', 'Complemento 77', '00000077'),
('Logradouro 78', 78, 'Bairro 78', 'Cidade 78', 'Complemento 78', '00000078'),
('Logradouro 79', 79, 'Bairro 79', 'Cidade 79', 'Complemento 79', '00000079'),
('Logradouro 80', 80, 'Bairro 80', 'Cidade 80', 'Complemento 80', '00000080'),
('Logradouro 81', 81, 'Bairro 81', 'Cidade 81', 'Complemento 81', '00000081'),
('Logradouro 82', 82, 'Bairro 82', 'Cidade 82', 'Complemento 82', '00000082'),
('Logradouro 83', 83, 'Bairro 83', 'Cidade 83', 'Complemento 83', '00000083'),
('Logradouro 84', 84, 'Bairro 84', 'Cidade 84', 'Complemento 84', '00000084'),
('Logradouro 85', 85, 'Bairro 85', 'Cidade 85', 'Complemento 85', '00000085'),
('Logradouro 86', 86, 'Bairro 86', 'Cidade 86', 'Complemento 86', '00000086'),
('Logradouro 87', 87, 'Bairro 87', 'Cidade 87', 'Complemento 87', '00000087'),
('Logradouro 88', 88, 'Bairro 88', 'Cidade 88', 'Complemento 88', '00000088'),
('Logradouro 89', 89, 'Bairro 89', 'Cidade 89', 'Complemento 89', '00000089'),
('Logradouro 90', 90, 'Bairro 90', 'Cidade 90', 'Complemento 90', '00000090'),
('Logradouro 91', 91, 'Bairro 91', 'Cidade 91', 'Complemento 91', '00000091'),
('Logradouro 92', 92, 'Bairro 92', 'Cidade 92', 'Complemento 92', '00000092'),
('Logradouro 93', 93, 'Bairro 93', 'Cidade 93', 'Complemento 93', '00000093'),
('Logradouro 94', 94, 'Bairro 94', 'Cidade 94', 'Complemento 94', '00000094'),
('Logradouro 95', 95, 'Bairro 95', 'Cidade 95', 'Complemento 95', '00000095'),
('Logradouro 96', 96, 'Bairro 96', 'Cidade 96', 'Complemento 96', '00000096'),
('Logradouro 97', 97, 'Bairro 97', 'Cidade 97', 'Complemento 97', '00000097'),
('Logradouro 98', 98, 'Bairro 98', 'Cidade 98', 'Complemento 98', '00000098'),
('Logradouro 99', 99, 'Bairro 99', 'Cidade 99', 'Complemento 99', '00000099'),
('Logradouro 100', 100, 'Bairro 100', 'Cidade 100', 'Complemento 100', '00000100'),
('Logradouro 101', 101, 'Bairro 101', 'Cidade 101', 'Complemento 101', '00000101'),
('Logradouro 102', 102, 'Bairro 102', 'Cidade 102', 'Complemento 102', '00000102'),
('Logradouro 103', 103, 'Bairro 103', 'Cidade 103', 'Complemento 103', '00000103'),
('Logradouro 104', 104, 'Bairro 104', 'Cidade 104', 'Complemento 104', '00000104'),
('Logradouro 105', 105, 'Bairro 105', 'Cidade 105', 'Complemento 105', '00000105'),
('Logradouro 106', 106, 'Bairro 106', 'Cidade 106', 'Complemento 106', '00000106'),
('Logradouro 107', 107, 'Bairro 107', 'Cidade 107', 'Complemento 107', '00000107'),
('Logradouro 108', 108, 'Bairro 108', 'Cidade 108', 'Complemento 108', '00000108'),
('Logradouro 109', 109, 'Bairro 109', 'Cidade 109', 'Complemento 109', '00000109'),
('Logradouro 110', 110, 'Bairro 110', 'Cidade 110', 'Complemento 110', '00000110'),
('Logradouro 111', 111, 'Bairro 111', 'Cidade 111', 'Complemento 111', '00000111'),
('Logradouro 112', 112, 'Bairro 112', 'Cidade 112', 'Complemento 112', '00000112'),
('Logradouro 113', 113, 'Bairro 113', 'Cidade 113', 'Complemento 113', '00000113'),
('Logradouro 114', 114, 'Bairro 114', 'Cidade 114', 'Complemento 114', '00000114'),
('Logradouro 115', 115, 'Bairro 115', 'Cidade 115', 'Complemento 115', '00000115');

INSERT INTO departamento (nome_dep, email_dep, tel_cel_dep)
VALUES
('Departamento 1', 'dep1@unipf.edu', '+5571900000001'),
('Departamento 2', 'dep2@unipf.edu', '+5571900000002'),
('Departamento 3', 'dep3@unipf.edu', '+5571900000003'),
('Departamento 4', 'dep4@unipf.edu', '+5571900000004'),
('Departamento 5', 'dep5@unipf.edu', '+5571900000005');   

INSERT INTO curso (nome_curso, cod_dep)
VALUES
('Curso 1', 11),
('Curso 2', 12),
('Curso 3', 13),
('Curso 4', 14),
('Curso 5', 15),
('Curso 6', 11),
('Curso 7', 12),
('Curso 8', 13),
('Curso 9', 14),
('Curso 10', 15);

INSERT INTO disciplina (nome_disc, cod_dep, ch, descricao)
VALUES
('Disciplina 1', 11, 60, 'Descrição 1'),
('Disciplina 2', 12, 60, 'Descrição 2'),
('Disciplina 3', 13, 60, 'Descrição 3'),
('Disciplina 4', 14, 60, 'Descrição 4'),
('Disciplina 5', 15, 60, 'Descrição 5'),
('Disciplina 6', 11, 60, 'Descrição 6'),
('Disciplina 7', 12, 60, 'Descrição 7'),
('Disciplina 8', 13, 60, 'Descrição 8'),
('Disciplina 9', 14, 60, 'Descrição 9'),
('Disciplina 10', 15, 60, 'Descrição 10'),
('Disciplina 11', 11, 60, 'Descrição 11'),
('Disciplina 12', 12, 60, 'Descrição 12'),
('Disciplina 13', 13, 60, 'Descrição 13'),
('Disciplina 14', 14, 60, 'Descrição 14'),
('Disciplina 15', 15, 60, 'Descrição 15'),
('Disciplina 16', 11, 60, 'Descrição 16'),
('Disciplina 17', 12, 60, 'Descrição 17'),
('Disciplina 18', 13, 60, 'Descrição 18'),
('Disciplina 19', 14, 60, 'Descrição 19'),
('Disciplina 20', 15, 60, 'Descrição 20'),
('Disciplina 21', 11, 60, 'Descrição 21'),
('Disciplina 22', 12, 60, 'Descrição 22'),
('Disciplina 23', 13, 60, 'Descrição 23'),
('Disciplina 24', 14, 60, 'Descrição 24'),
('Disciplina 25', 15, 60, 'Descrição 25'),
('Disciplina 26', 11, 60, 'Descrição 26'),
('Disciplina 27', 12, 60, 'Descrição 27'),
('Disciplina 28', 13, 60, 'Descrição 28'),
('Disciplina 29', 14, 60, 'Descrição 29'),
('Disciplina 30', 15, 60, 'Descrição 30'),
('Disciplina 31', 11, 60, 'Descrição 31'),
('Disciplina 32', 12, 60, 'Descrição 32'),
('Disciplina 33', 13, 60, 'Descrição 33'),
('Disciplina 34', 14, 60, 'Descrição 34'),
('Disciplina 35', 15, 60, 'Descrição 35'),
('Disciplina 36', 11, 60, 'Descrição 36'),
('Disciplina 37', 12, 60, 'Descrição 37'),
('Disciplina 38', 13, 60, 'Descrição 38'),
('Disciplina 39', 14, 60, 'Descrição 39'),
('Disciplina 40', 15, 60, 'Descrição 40'),
('Disciplina 41', 11, 60, 'Descrição 41'),
('Disciplina 42', 12, 60, 'Descrição 42'),
('Disciplina 43', 13, 60, 'Descrição 43'),
('Disciplina 44', 14, 60, 'Descrição 44'),
('Disciplina 45', 15, 60, 'Descrição 45'),
('Disciplina 46', 11, 60, 'Descrição 46'),
('Disciplina 47', 12, 60, 'Descrição 47'),
('Disciplina 48', 13, 60, 'Descrição 48'),
('Disciplina 49', 14, 60, 'Descrição 49'),
('Disciplina 50', 15, 60, 'Descrição 50');

INSERT INTO professor (nome_prof, sobrenome_prof, cpf_prof, genero_prof, cod_dep, email_prof, tel_cel_prof)
VALUES
('Professor 1', 'Sobrenome 1', '00000000001', 'N', 11, 'prof1@unipf.edu', '+5571990000001'),
('Professor 2', 'Sobrenome 2', '00000000002', 'N', 12, 'prof2@unipf.edu', '+5571990000002'),
('Professor 3', 'Sobrenome 3', '00000000003', 'N', 13, 'prof3@unipf.edu', '+5571990000003'),
('Professor 4', 'Sobrenome 4', '00000000004', 'N', 14, 'prof4@unipf.edu', '+5571990000004'),
('Professor 5', 'Sobrenome 5', '00000000005', 'N', 15, 'prof5@unipf.edu', '+5571990000005'),
('Professor 6', 'Sobrenome 6', '00000000006', 'N', 11, 'prof6@unipf.edu', '+5571990000006'),
('Professor 7', 'Sobrenome 7', '00000000007', 'N', 12, 'prof7@unipf.edu', '+5571990000007'),
('Professor 8', 'Sobrenome 8', '00000000008', 'N', 13, 'prof8@unipf.edu', '+5571990000008'),
('Professor 9', 'Sobrenome 9', '00000000009', 'N', 14, 'prof9@unipf.edu', '+5571990000009'),
('Professor 10', 'Sobrenome 10', '00000000010', 'N', 15, 'prof10@unipf.edu', '+5571990000010');

INSERT INTO turma (cod_disc, cod_prof, hora_inicio, hora_fim)
VALUES
(1, 1, '07:00:00', '08:00:00'),
(2, 2, '08:00:00', '09:00:00'),
(3, 3, '09:00:00', '10:00:00'),
(4, 4, '10:00:00', '11:00:00'),
(5, 5, '11:00:00', '12:00:00'),
(6, 6, '12:00:00', '13:00:00'),
(7, 7, '13:00:00', '14:00:00'),
(8, 8, '14:00:00', '15:00:00'),
(9, 9, '15:00:00', '16:00:00'),
(10, 10, '16:00:00', '17:00:00'),
(11, 1, '17:00:00', '18:00:00'),
(12, 2, '18:00:00', '19:00:00'),
(13, 3, '19:00:00', '20:00:00'),
(14, 4, '20:00:00', '21:00:00'),
(15, 5, '21:00:00', '22:00:00'),
(16, 6, '07:00:00', '08:00:00'),
(17, 7, '08:00:00', '09:00:00'),
(18, 8, '09:00:00', '10:00:00'),
(19, 9, '10:00:00', '11:00:00'),
(20, 10, '11:00:00', '12:00:00'),
(21, 1, '12:00:00', '13:00:00'),
(22, 2, '13:00:00', '14:00:00'),
(23, 3, '14:00:00', '15:00:00'),
(24, 4, '15:00:00', '16:00:00'),
(25, 5, '16:00:00', '17:00:00'),
(26, 6, '17:00:00', '18:00:00'),
(27, 7, '18:00:00', '19:00:00'),
(28, 8, '19:00:00', '20:00:00'),
(29, 9, '20:00:00', '21:00:00'),
(30, 10, '21:00:00', '22:00:00'),
(31, 1, '07:00:00', '08:00:00'),
(32, 2, '08:00:00', '09:00:00'),
(33, 3, '09:00:00', '10:00:00'),
(34, 4, '10:00:00', '11:00:00'),
(35, 5, '11:00:00', '12:00:00'),
(36, 6, '12:00:00', '13:00:00'),
(37, 7, '13:00:00', '14:00:00'),
(38, 8, '14:00:00', '15:00:00'),
(39, 9, '15:00:00', '16:00:00'),
(40, 10, '16:00:00', '17:00:00'),
(41, 1, '17:00:00', '18:00:00'),
(42, 2, '18:00:00', '19:00:00'),
(43, 3, '19:00:00', '20:00:00'),
(44, 4, '20:00:00', '21:00:00'),
(45, 5, '21:00:00', '22:00:00'),
(46, 6, '07:00:00', '08:00:00'),
(47, 7, '08:00:00', '09:00:00'),
(48, 8, '09:00:00', '10:00:00'),
(49, 9, '10:00:00', '11:00:00'),
(50, 10, '11:00:00', '12:00:00');

INSERT INTO aluno (nome_alu, sobrenome_alu, cpf_aLu, genero_alu, cod_curso, nome_pai, nome_mae, email_alu, tel_cel_alu)
VALUES
('Aluno 1', 'Sobrenome 1', '10000000001', 'N', 31, 'Pai 1', 'Mãe 1', 'aluno1@unipf.edu', '+5571980000001'),
('Aluno 2', 'Sobrenome 2', '10000000002', 'N', 32, 'Pai 2', 'Mãe 2', 'aluno2@unipf.edu', '+5571980000002'),
('Aluno 3', 'Sobrenome 3', '10000000003', 'N', 33, 'Pai 3', 'Mãe 3', 'aluno3@unipf.edu', '+5571980000003'),
('Aluno 4', 'Sobrenome 4', '10000000004', 'N', 34, 'Pai 4', 'Mãe 4', 'aluno4@unipf.edu', '+5571980000004'),
('Aluno 5', 'Sobrenome 5', '10000000005', 'N', 35, 'Pai 5', 'Mãe 5', 'aluno5@unipf.edu', '+5571980000005'),
('Aluno 6', 'Sobrenome 6', '10000000006', 'N', 36, 'Pai 6', 'Mãe 6', 'aluno6@unipf.edu', '+5571980000006'),
('Aluno 7', 'Sobrenome 7', '10000000007', 'N', 37, 'Pai 7', 'Mãe 7', 'aluno7@unipf.edu', '+5571980000007'),
('Aluno 8', 'Sobrenome 8', '10000000008', 'N', 38, 'Pai 8', 'Mãe 8', 'aluno8@unipf.edu', '+5571980000008'),
('Aluno 9', 'Sobrenome 9', '10000000009', 'N', 39, 'Pai 9', 'Mãe 9', 'aluno9@unipf.edu', '+5571980000009'),
('Aluno 10', 'Sobrenome 10', '10000000010', 'N', 40, 'Pai 10', 'Mãe 10', 'aluno10@unipf.edu', '+5571980000010'),
('Aluno 11', 'Sobrenome 11', '10000000011', 'N', 31, 'Pai 11', 'Mãe 11', 'aluno11@unipf.edu', '+5571980000011'),
('Aluno 12', 'Sobrenome 12', '10000000012', 'N', 32, 'Pai 12', 'Mãe 12', 'aluno12@unipf.edu', '+5571980000012'),
('Aluno 13', 'Sobrenome 13', '10000000013', 'N', 33, 'Pai 13', 'Mãe 13', 'aluno13@unipf.edu', '+5571980000013'),
('Aluno 14', 'Sobrenome 14', '10000000014', 'N', 34, 'Pai 14', 'Mãe 14', 'aluno14@unipf.edu', '+5571980000014'),
('Aluno 15', 'Sobrenome 15', '10000000015', 'N', 35, 'Pai 15', 'Mãe 15', 'aluno15@unipf.edu', '+5571980000015'),
('Aluno 16', 'Sobrenome 16', '10000000016', 'N', 36, 'Pai 16', 'Mãe 16', 'aluno16@unipf.edu', '+5571980000016'),
('Aluno 17', 'Sobrenome 17', '10000000017', 'N', 37, 'Pai 17', 'Mãe 17', 'aluno17@unipf.edu', '+5571980000017'),
('Aluno 18', 'Sobrenome 18', '10000000018', 'N', 38, 'Pai 18', 'Mãe 18', 'aluno18@unipf.edu', '+5571980000018'),
('Aluno 19', 'Sobrenome 19', '10000000019', 'N', 39, 'Pai 19', 'Mãe 19', 'aluno19@unipf.edu', '+5571980000019'),
('Aluno 20', 'Sobrenome 20', '10000000020', 'N', 40, 'Pai 20', 'Mãe 20', 'aluno20@unipf.edu', '+5571980000020'),
('Aluno 21', 'Sobrenome 21', '10000000021', 'N', 31, 'Pai 21', 'Mãe 21', 'aluno21@unipf.edu', '+5571980000021'),
('Aluno 22', 'Sobrenome 22', '10000000022', 'N', 32, 'Pai 22', 'Mãe 22', 'aluno22@unipf.edu', '+5571980000022'),
('Aluno 23', 'Sobrenome 23', '10000000023', 'N', 33, 'Pai 23', 'Mãe 23', 'aluno23@unipf.edu', '+5571980000023'),
('Aluno 24', 'Sobrenome 24', '10000000024', 'N', 34, 'Pai 24', 'Mãe 24', 'aluno24@unipf.edu', '+5571980000024'),
('Aluno 25', 'Sobrenome 25', '10000000025', 'N', 35, 'Pai 25', 'Mãe 25', 'aluno25@unipf.edu', '+5571980000025'),
('Aluno 26', 'Sobrenome 26', '10000000026', 'N', 36, 'Pai 26', 'Mãe 26', 'aluno26@unipf.edu', '+5571980000026'),
('Aluno 27', 'Sobrenome 27', '10000000027', 'N', 37, 'Pai 27', 'Mãe 27', 'aluno27@unipf.edu', '+5571980000027'),
('Aluno 28', 'Sobrenome 28', '10000000028', 'N', 38, 'Pai 28', 'Mãe 28', 'aluno28@unipf.edu', '+5571980000028'),
('Aluno 29', 'Sobrenome 29', '10000000029', 'N', 39, 'Pai 29', 'Mãe 29', 'aluno29@unipf.edu', '+5571980000029'),
('Aluno 30', 'Sobrenome 30', '10000000030', 'N', 40, 'Pai 30', 'Mãe 30', 'aluno30@unipf.edu', '+5571980000030'),
('Aluno 31', 'Sobrenome 31', '10000000031', 'N', 31, 'Pai 31', 'Mãe 31', 'aluno31@unipf.edu', '+5571980000031'),
('Aluno 32', 'Sobrenome 32', '10000000032', 'N', 32, 'Pai 32', 'Mãe 32', 'aluno32@unipf.edu', '+5571980000032'),
('Aluno 33', 'Sobrenome 33', '10000000033', 'N', 33, 'Pai 33', 'Mãe 33', 'aluno33@unipf.edu', '+5571980000033'),
('Aluno 34', 'Sobrenome 34', '10000000034', 'N', 34, 'Pai 34', 'Mãe 34', 'aluno34@unipf.edu', '+5571980000034'),
('Aluno 35', 'Sobrenome 35', '10000000035', 'N', 35, 'Pai 35', 'Mãe 35', 'aluno35@unipf.edu', '+5571980000035'),
('Aluno 36', 'Sobrenome 36', '10000000036', 'N', 36, 'Pai 36', 'Mãe 36', 'aluno36@unipf.edu', '+5571980000036'),
('Aluno 37', 'Sobrenome 37', '10000000037', 'N', 37, 'Pai 37', 'Mãe 37', 'aluno37@unipf.edu', '+5571980000037'),
('Aluno 38', 'Sobrenome 38', '10000000038', 'N', 38, 'Pai 38', 'Mãe 38', 'aluno38@unipf.edu', '+5571980000038'),
('Aluno 39', 'Sobrenome 39', '10000000039', 'N', 39, 'Pai 39', 'Mãe 39', 'aluno39@unipf.edu', '+5571980000039'),
('Aluno 40', 'Sobrenome 40', '10000000040', 'N', 40, 'Pai 40', 'Mãe 40', 'aluno40@unipf.edu', '+5571980000040'),
('Aluno 41', 'Sobrenome 41', '10000000041', 'N', 31, 'Pai 41', 'Mãe 41', 'aluno41@unipf.edu', '+5571980000041'),
('Aluno 42', 'Sobrenome 42', '10000000042', 'N', 32, 'Pai 42', 'Mãe 42', 'aluno42@unipf.edu', '+5571980000042'),
('Aluno 43', 'Sobrenome 43', '10000000043', 'N', 33, 'Pai 43', 'Mãe 43', 'aluno43@unipf.edu', '+5571980000043'),
('Aluno 44', 'Sobrenome 44', '10000000044', 'N', 34, 'Pai 44', 'Mãe 44', 'aluno44@unipf.edu', '+5571980000044'),
('Aluno 45', 'Sobrenome 45', '10000000045', 'N', 35, 'Pai 45', 'Mãe 45', 'aluno45@unipf.edu', '+5571980000045'),
('Aluno 46', 'Sobrenome 46', '10000000046', 'N', 36, 'Pai 46', 'Mãe 46', 'aluno46@unipf.edu', '+5571980000046'),
('Aluno 47', 'Sobrenome 47', '10000000047', 'N', 37, 'Pai 47', 'Mãe 47', 'aluno47@unipf.edu', '+5571980000047'),
('Aluno 48', 'Sobrenome 48', '10000000048', 'N', 38, 'Pai 48', 'Mãe 48', 'aluno48@unipf.edu', '+5571980000048'),
('Aluno 49', 'Sobrenome 49', '10000000049', 'N', 39, 'Pai 49', 'Mãe 49', 'aluno49@unipf.edu', '+5571980000049'),
('Aluno 50', 'Sobrenome 50', '10000000050', 'N', 40, 'Pai 50', 'Mãe 50', 'aluno50@unipf.edu', '+5571980000050'),
('Aluno 51', 'Sobrenome 51', '10000000051', 'N', 31, 'Pai 51', 'Mãe 51', 'aluno51@unipf.edu', '+5571980000051'),
('Aluno 52', 'Sobrenome 52', '10000000052', 'N', 32, 'Pai 52', 'Mãe 52', 'aluno52@unipf.edu', '+5571980000052'),
('Aluno 53', 'Sobrenome 53', '10000000053', 'N', 33, 'Pai 53', 'Mãe 53', 'aluno53@unipf.edu', '+5571980000053'),
('Aluno 54', 'Sobrenome 54', '10000000054', 'N', 34, 'Pai 54', 'Mãe 54', 'aluno54@unipf.edu', '+5571980000054'),
('Aluno 55', 'Sobrenome 55', '10000000055', 'N', 35, 'Pai 55', 'Mãe 55', 'aluno55@unipf.edu', '+5571980000055'),
('Aluno 56', 'Sobrenome 56', '10000000056', 'N', 36, 'Pai 56', 'Mãe 56', 'aluno56@unipf.edu', '+5571980000056'),
('Aluno 57', 'Sobrenome 57', '10000000057', 'N', 37, 'Pai 57', 'Mãe 57', 'aluno57@unipf.edu', '+5571980000057'),
('Aluno 58', 'Sobrenome 58', '10000000058', 'N', 38, 'Pai 58', 'Mãe 58', 'aluno58@unipf.edu', '+5571980000058'),
('Aluno 59', 'Sobrenome 59', '10000000059', 'N', 39, 'Pai 59', 'Mãe 59', 'aluno59@unipf.edu', '+5571980000059'),
('Aluno 60', 'Sobrenome 60', '10000000060', 'N', 40, 'Pai 60', 'Mãe 60', 'aluno60@unipf.edu', '+5571980000060'),
('Aluno 61', 'Sobrenome 61', '10000000061', 'N', 31, 'Pai 61', 'Mãe 61', 'aluno61@unipf.edu', '+5571980000061'),
('Aluno 62', 'Sobrenome 62', '10000000062', 'N', 32, 'Pai 62', 'Mãe 62', 'aluno62@unipf.edu', '+5571980000062'),
('Aluno 63', 'Sobrenome 63', '10000000063', 'N', 33, 'Pai 63', 'Mãe 63', 'aluno63@unipf.edu', '+5571980000063'),
('Aluno 64', 'Sobrenome 64', '10000000064', 'N', 34, 'Pai 64', 'Mãe 64', 'aluno64@unipf.edu', '+5571980000064'),
('Aluno 65', 'Sobrenome 65', '10000000065', 'N', 35, 'Pai 65', 'Mãe 65', 'aluno65@unipf.edu', '+5571980000065'),
('Aluno 66', 'Sobrenome 66', '10000000066', 'N', 36, 'Pai 66', 'Mãe 66', 'aluno66@unipf.edu', '+5571980000066'),
('Aluno 67', 'Sobrenome 67', '10000000067', 'N', 37, 'Pai 67', 'Mãe 67', 'aluno67@unipf.edu', '+5571980000067'),
('Aluno 68', 'Sobrenome 68', '10000000068', 'N', 38, 'Pai 68', 'Mãe 68', 'aluno68@unipf.edu', '+5571980000068'),
('Aluno 69', 'Sobrenome 69', '10000000069', 'N', 39, 'Pai 69', 'Mãe 69', 'aluno69@unipf.edu', '+5571980000069'),
('Aluno 70', 'Sobrenome 70', '10000000070', 'N', 40, 'Pai 70', 'Mãe 70', 'aluno70@unipf.edu', '+5571980000070'),
('Aluno 71', 'Sobrenome 71', '10000000071', 'N', 31, 'Pai 71', 'Mãe 71', 'aluno71@unipf.edu', '+5571980000071'),
('Aluno 72', 'Sobrenome 72', '10000000072', 'N', 32, 'Pai 72', 'Mãe 72', 'aluno72@unipf.edu', '+5571980000072'),
('Aluno 73', 'Sobrenome 73', '10000000073', 'N', 33, 'Pai 73', 'Mãe 73', 'aluno73@unipf.edu', '+5571980000073'),
('Aluno 74', 'Sobrenome 74', '10000000074', 'N', 34, 'Pai 74', 'Mãe 74', 'aluno74@unipf.edu', '+5571980000074'),
('Aluno 75', 'Sobrenome 75', '10000000075', 'N', 35, 'Pai 75', 'Mãe 75', 'aluno75@unipf.edu', '+5571980000075'),
('Aluno 76', 'Sobrenome 76', '10000000076', 'N', 36, 'Pai 76', 'Mãe 76', 'aluno76@unipf.edu', '+5571980000076'),
('Aluno 77', 'Sobrenome 77', '10000000077', 'N', 37, 'Pai 77', 'Mãe 77', 'aluno77@unipf.edu', '+5571980000077'),
('Aluno 78', 'Sobrenome 78', '10000000078', 'N', 38, 'Pai 78', 'Mãe 78', 'aluno78@unipf.edu', '+5571980000078'),
('Aluno 79', 'Sobrenome 79', '10000000079', 'N', 39, 'Pai 79', 'Mãe 79', 'aluno79@unipf.edu', '+5571980000079'),
('Aluno 80', 'Sobrenome 80', '10000000080', 'N', 40, 'Pai 80', 'Mãe 80', 'aluno80@unipf.edu', '+5571980000080'),
('Aluno 81', 'Sobrenome 81', '10000000081', 'N', 31, 'Pai 81', 'Mãe 81', 'aluno81@unipf.edu', '+5571980000081'),
('Aluno 82', 'Sobrenome 82', '10000000082', 'N', 32, 'Pai 82', 'Mãe 82', 'aluno82@unipf.edu', '+5571980000082'),
('Aluno 83', 'Sobrenome 83', '10000000083', 'N', 33, 'Pai 83', 'Mãe 83', 'aluno83@unipf.edu', '+5571980000083'),
('Aluno 84', 'Sobrenome 84', '10000000084', 'N', 34, 'Pai 84', 'Mãe 84', 'aluno84@unipf.edu', '+5571980000084'),
('Aluno 85', 'Sobrenome 85', '10000000085', 'N', 35, 'Pai 85', 'Mãe 85', 'aluno85@unipf.edu', '+5571980000085'),
('Aluno 86', 'Sobrenome 86', '10000000086', 'N', 36, 'Pai 86', 'Mãe 86', 'aluno86@unipf.edu', '+5571980000086'),
('Aluno 87', 'Sobrenome 87', '10000000087', 'N', 37, 'Pai 87', 'Mãe 87', 'aluno87@unipf.edu', '+5571980000087'),
('Aluno 88', 'Sobrenome 88', '10000000088', 'N', 38, 'Pai 88', 'Mãe 88', 'aluno88@unipf.edu', '+5571980000088'),
('Aluno 89', 'Sobrenome 89', '10000000089', 'N', 39, 'Pai 89', 'Mãe 89', 'aluno89@unipf.edu', '+5571980000089'),
('Aluno 90', 'Sobrenome 90', '10000000090', 'N', 40, 'Pai 90', 'Mãe 90', 'aluno90@unipf.edu', '+5571980000090'),
('Aluno 91', 'Sobrenome 91', '10000000091', 'N', 31, 'Pai 91', 'Mãe 91', 'aluno91@unipf.edu', '+5571980000091'),
('Aluno 92', 'Sobrenome 92', '10000000092', 'N', 32, 'Pai 92', 'Mãe 92', 'aluno92@unipf.edu', '+5571980000092'),
('Aluno 93', 'Sobrenome 93', '10000000093', 'N', 33, 'Pai 93', 'Mãe 93', 'aluno93@unipf.edu', '+5571980000093'),
('Aluno 94', 'Sobrenome 94', '10000000094', 'N', 34, 'Pai 94', 'Mãe 94', 'aluno94@unipf.edu', '+5571980000094'),
('Aluno 95', 'Sobrenome 95', '10000000095', 'N', 35, 'Pai 95', 'Mãe 95', 'aluno95@unipf.edu', '+5571980000095'),
('Aluno 96', 'Sobrenome 96', '10000000096', 'N', 36, 'Pai 96', 'Mãe 96', 'aluno96@unipf.edu', '+5571980000096'),
('Aluno 97', 'Sobrenome 97', '10000000097', 'N', 37, 'Pai 97', 'Mãe 97', 'aluno97@unipf.edu', '+5571980000097'),
('Aluno 98', 'Sobrenome 98', '10000000098', 'N', 38, 'Pai 98', 'Mãe 98', 'aluno98@unipf.edu', '+5571980000098'),
('Aluno 99', 'Sobrenome 99', '10000000099', 'N', 39, 'Pai 99', 'Mãe 99', 'aluno99@unipf.edu', '+5571980000099'),
('Aluno 100', 'Sobrenome 100', '10000000100', 'N', 40, 'Pai 100', 'Mãe 100', 'aluno100@unipf.edu', '+5571980000100');
	
INSERT INTO historico (ra, data_inicio)
VALUES
(101, '2025-01-01'),
(102, '2025-01-01'),
(103, '2025-01-01'),
(104, '2025-01-01'),
(105, '2025-01-01'),
(106, '2025-01-01'),
(107, '2025-01-01'),
(108, '2025-01-01'),
(109, '2025-01-01'),
(110, '2025-01-01'),
(111, '2025-01-01'),
(112, '2025-01-01'),
(113, '2025-01-01'),
(114, '2025-01-01'),
(115, '2025-01-01'),
(116, '2025-01-01'),
(117, '2025-01-01'),
(118, '2025-01-01'),
(119, '2025-01-01'),
(120, '2025-01-01'),
(121, '2025-01-01'),
(122, '2025-01-01'),
(123, '2025-01-01'),
(124, '2025-01-01'),
(125, '2025-01-01'),
(126, '2025-01-01'),
(127, '2025-01-01'),
(128, '2025-01-01'),
(129, '2025-01-01'),
(130, '2025-01-01'),
(131, '2025-01-01'),
(132, '2025-01-01'),
(133, '2025-01-01'),
(134, '2025-01-01'),
(135, '2025-01-01'),
(136, '2025-01-01'),
(137, '2025-01-01'),
(138, '2025-01-01'),
(139, '2025-01-01'),
(140, '2025-01-01'),
(141, '2025-01-01'),
(142, '2025-01-01'),
(143, '2025-01-01'),
(144, '2025-01-01'),
(145, '2025-01-01'),
(146, '2025-01-01'),
(147, '2025-01-01'),
(148, '2025-01-01'),
(149, '2025-01-01'),
(150, '2025-01-01'),
(151, '2025-01-01'),
(152, '2025-01-01'),
(153, '2025-01-01'),
(154, '2025-01-01'),
(155, '2025-01-01'),
(156, '2025-01-01'),
(157, '2025-01-01'),
(158, '2025-01-01'),
(159, '2025-01-01'),
(160, '2025-01-01'),
(161, '2025-01-01'),
(162, '2025-01-01'),
(163, '2025-01-01'),
(164, '2025-01-01'),
(165, '2025-01-01'),
(166, '2025-01-01'),
(167, '2025-01-01'),
(168, '2025-01-01'),
(169, '2025-01-01'),
(170, '2025-01-01'),
(171, '2025-01-01'),
(172, '2025-01-01'),
(173, '2025-01-01'),
(174, '2025-01-01'),
(175, '2025-01-01'),
(176, '2025-01-01'),
(177, '2025-01-01'),
(178, '2025-01-01'),
(179, '2025-01-01'),
(180, '2025-01-01'),
(181, '2025-01-01'),
(182, '2025-01-01'),
(183, '2025-01-01'),
(184, '2025-01-01'),
(185, '2025-01-01'),
(186, '2025-01-01'),
(187, '2025-01-01'),
(188, '2025-01-01'),
(189, '2025-01-01'),
(190, '2025-01-01'),
(191, '2025-01-01'),
(192, '2025-01-01'),
(193, '2025-01-01'),
(194, '2025-01-01'),
(195, '2025-01-01'),
(196, '2025-01-01'),
(197, '2025-01-01'),
(198, '2025-01-01'),
(199, '2025-01-01'),
(200, '2025-01-01');

INSERT INTO aluno_disc (ra, cod_disc)
VALUES
(101, 1),
(102, 2),
(103, 3),
(104, 4),
(105, 5),
(106, 6),
(107, 7),
(108, 8),
(109, 9),
(110, 10),
(111, 11),
(112, 12),
(113, 13),
(114, 14),
(115, 15),
(116, 16),
(117, 17),
(118, 18),
(119, 19),
(120, 20),
(121, 21),
(122, 22),
(123, 23),
(124, 24),
(125, 25),
(126, 26),
(127, 27),
(128, 28),
(129, 29),
(130, 30),
(131, 31),
(132, 32),
(133, 33),
(134, 34),
(135, 35),
(136, 36),
(137, 37),
(138, 38),
(139, 39),
(140, 40),
(141, 41),
(142, 42),
(143, 43),
(144, 44),
(145, 45),
(146, 46),
(147, 47),
(148, 48),
(149, 49),
(150, 50),
(151, 1),
(152, 2),
(153, 3),
(154, 4),
(155, 5),
(156, 6),
(157, 7),
(158, 8),
(159, 9),
(160, 10),
(161, 11),
(162, 12),
(163, 13),
(164, 14),
(165, 15),
(166, 16),
(167, 17),
(168, 18),
(169, 19),
(170, 20),
(171, 21),
(172, 22),
(173, 23),
(174, 24),
(175, 25),
(176, 26),
(177, 27),
(178, 28),
(179, 29),
(180, 30),
(181, 31),
(182, 32),
(183, 33),
(184, 34),
(185, 35),
(186, 36),
(187, 37),
(188, 38),
(189, 39),
(190, 40),
(191, 41),
(192, 42),
(193, 43),
(194, 44),
(195, 45),
(196, 46),
(197, 47),
(198, 48),
(199, 49),
(200, 50);

INSERT INTO aluno_turma (ra, cod_tur)
VALUES
(101, 1),
(102, 2),
(103, 3),
(104, 4),
(105, 5),
(106, 6),
(107, 7),
(108, 8),
(109, 9),
(110, 10),
(111, 11),
(112, 12),
(113, 13),
(114, 14),
(115, 15),
(116, 16),
(117, 17),
(118, 18),
(119, 19),
(120, 20),
(121, 21),
(122, 22),
(123, 23),
(124, 24),
(125, 25),
(126, 26),
(127, 27),
(128, 28),
(129, 29),
(130, 30),
(131, 31),
(132, 32),
(133, 33),
(134, 34),
(135, 35),
(136, 36),
(137, 37),
(138, 38),
(139, 39),
(140, 40),
(141, 41),
(142, 42),
(143, 43),
(144, 44),
(145, 45),
(146, 46),
(147, 47),
(148, 48),
(149, 49),
(150, 50),
(151, 1),
(152, 2),
(153, 3),
(154, 4),
(155, 5),
(156, 6),
(157, 7),
(158, 8),
(159, 9),
(160, 10),
(161, 11),
(162, 12),
(163, 13),
(164, 14),
(165, 15),
(166, 16),
(167, 17),
(168, 18),
(169, 19),
(170, 20),
(171, 21),
(172, 22),
(173, 23),
(174, 24),
(175, 25),
(176, 26),
(177, 27),
(178, 28),
(179, 29),
(180, 30),
(181, 31),
(182, 32),
(183, 33),
(184, 34),
(185, 35),
(186, 36),
(187, 37),
(188, 38),
(189, 39),
(190, 40),
(191, 41),
(192, 42),
(193, 43),
(194, 44),
(195, 45),
(196, 46),
(197, 47),
(198, 48),
(199, 49),
(200, 50);

INSERT INTO curso_disc (cod_curso, cod_disc)
VALUES
(31, 1),  
(32, 2),  
(33, 3),  
(34, 4),  
(35, 5),  
(36, 6),  
(37, 7),  
(38, 8),  
(39, 9),  
(40, 10),  
(31, 11),  
(32, 12),  
(33, 13),  
(34, 14),  
(35, 15),  
(36, 16),  
(37, 17),  
(38, 18),  
(39, 19),  
(40, 20),  
(31, 21),  
(32, 22),  
(33, 23),  
(34, 24),  
(35, 25),  
(36, 26),  
(37, 27),  
(38, 28),  
(39, 29),  
(40, 30),  
(31, 31),  
(32, 32),  
(33, 33),  
(34, 34),  
(35, 35),  
(36, 36),  
(37, 37),  
(38, 38),  
(39, 39),  
(40, 40),  
(31, 41),  
(32, 42),  
(33, 43),  
(34, 44),  
(35, 45),  
(36, 46),  
(37, 47),  
(38, 48),  
(39, 49),  
(40, 50);

INSERT INTO disc_hist (cod_disc, cod_hist)
VALUES

(1, 1),
(2, 2),  
(3, 3),  
(4, 4),  
(5, 5),  
(6, 6),  
(7, 7),  
(8, 8),  
(9, 9),  
(10, 10),  
(11, 11),  
(12, 12),  
(13, 13),  
(14, 14),  
(15, 15),  
(16, 16),  
(17, 17),  
(18, 18),  
(19, 19),  
(20, 20),  
(21, 21),  
(22, 22),  
(23, 23),  
(24, 24),  
(25, 25),  
(26, 26),  
(27, 27),  
(28, 28),  
(29, 29),  
(30, 30),  
(31, 31),  
(32, 32),  
(33, 33),  
(34, 34),  
(35, 35),  
(36, 36),  
(37, 37),  
(38, 38),  
(39, 39),  
(40, 40),  
(41, 41),  
(42, 42),  
(43, 43),  
(44, 44),  
(45, 45),  
(46, 46),  
(47, 47),  
(48, 48),  
(49, 49),  
(50, 50),  
(1, 51),  
(2, 52),  
(3, 53),  
(4, 54),  
(5, 55),  
(6, 56),  
(7, 57),  
(8, 58),  
(9, 59),  
(10, 60),  
(11, 61),  
(12, 62),  
(13, 63),  
(14, 64),  
(15, 65),  
(16, 66),  
(17, 67),  
(18, 68),  
(19, 69),  
(20, 70),  
(21, 71),  
(22, 72),  
(23, 73),  
(24, 74),  
(25, 75),  
(26, 76),  
(27, 77),  
(28, 78),  
(29, 79),  
(30, 80),  
(31, 81),  
(32, 82),  
(33, 83),  
(34, 84),  
(35, 85),  
(36, 86),  
(37, 87),  
(38, 88),  
(39, 89),  
(40, 90),  
(41, 91),  
(42, 92),  
(43, 93),  
(44, 94),  
(45, 95),  
(46, 96),  
(47, 97),  
(48, 98),  
(49, 99),  
(50, 100);

INSERT INTO prof_disc (cod_prof, cod_disc)
VALUES
(1, 1),  
(2, 2),  
(3, 3),  
(4, 4),  
(5, 5),  
(6, 6),  
(7, 7),  
(8, 8),  
(9, 9),  
(10, 10),  
(1, 11),  
(2, 12),  
(3, 13),  
(4, 14),  
(5, 15),  
(6, 16),  
(7, 17),  
(8, 18),  
(9, 19),  
(10, 20),  
(1, 21),  
(2, 22),  
(3, 23),  
(4, 24),  
(5, 25),  
(6, 26),  
(7, 27),  
(8, 28),  
(9, 29),  
(10, 30),  
(1, 31),  
(2, 32),  
(3, 33),  
(4, 34),  
(5, 35),  
(6, 36),  
(7, 37),  
(8, 38),  
(9, 39),  
(10, 40),
(1, 41),  
(2, 42),  
(3, 43),  
(4, 44),  
(5, 45),  
(6, 46),  
(7, 47),  
(8, 48),  
(9, 49),  
(10, 50);

INSERT INTO end_dep (cod_end, cod_dep)
VALUES
(341, 11),
(342, 12),
(343, 13),
(344, 14),
(345, 15);

INSERT INTO end_prof (cod_end, cod_prof)
VALUES
(331, 1),
(332, 2),
(333, 3),
(334, 4),
(335, 5),
(336, 6),
(337, 7),
(338, 8),
(339, 9),
(340, 10);

SELECT * FROM endereco;

INSERT INTO end_alu (cod_end, ra)
VALUES
(231, 101),
(232, 102),
(233, 103),
(234, 104),
(235, 105),
(236, 106),
(237, 107),
(238, 108),
(239, 109),
(240, 110),
(241, 111),
(242, 112),
(243, 113),
(244, 114),
(245, 115),
(246, 116),
(247, 117),
(248, 118),
(249, 119),
(250, 120),
(251, 121),
(252, 122),
(253, 123),
(254, 124),
(255, 125),
(256, 126),
(257, 127),
(258, 128),
(259, 129),
(260, 130),
(261, 131),
(262, 132),
(263, 133),
(264, 134),
(265, 135),
(266, 136),
(267, 137),
(268, 138),
(269, 139),
(270, 140),
(271, 141),
(272, 142),
(273, 143),
(274, 144),
(275, 145),
(276, 146),
(277, 147),
(278, 148),
(279, 149),
(280, 150),
(281, 151),
(282, 152),
(283, 153),
(284, 154),
(285, 155),
(286, 156),
(287, 157),
(288, 158),
(289, 159),
(290, 160),
(291, 161),
(292, 162),
(293, 163),
(294, 164),
(295, 165),
(296, 166),
(297, 167),
(298, 168),
(299, 169),
(300, 170),
(301, 171),
(302, 172),
(303, 173),
(304, 174),
(305, 175),
(306, 176),
(307, 177),
(308, 178),
(309, 179),
(310, 180),
(311, 181),
(312, 182),
(313, 183),
(314, 184),
(315, 185),
(316, 186),
(317, 187),
(318, 188),
(319, 189),
(320, 190),
(321, 191),
(322, 192),
(323, 193),
(324, 194),
(325, 195),
(326, 196),
(327, 197),
(328, 198),
(329, 199),
(330, 200);


-- PERGUNTAS ANALÍTICAS, MATERIALIZED VIEWS E STORED PROCEDURES --

--1 Qual a distribuição de alunos por bairro?
CREATE MATERIALIZED VIEW vw_distribuicao_alunos_bairro AS
SELECT 
    e.Bairro, 
    COUNT(a.RA) AS qtd_alunos
FROM 
    Aluno a
    INNER JOIN End_Alu ea ON a.RA = ea.RA
    INNER JOIN Endereco e ON ea.Cod_End = e.Cod_End
GROUP BY 
    e.Bairro;

--2 Qual a distribuição de alunos por cidade?
CREATE MATERIALIZED VIEW vw_distribuicao_alunos_cidade AS
SELECT 
    e.Cidade, 
    COUNT(a.RA) AS qtd_alunos
FROM 
    Aluno a
    INNER JOIN End_Alu ea ON a.RA = ea.RA
    INNER JOIN Endereco e ON ea.Cod_End = e.Cod_End
GROUP BY 
    e.Cidade;

--3 Quantos professores têm em um determinado departamento?
CREATE OR REPLACE PROCEDURE qtd_professores_departamento(departamento INT)
LANGUAGE plpgsql AS $$
BEGIN
    -- Apenas exibe o resultado da contagem
    RAISE NOTICE 'Quantidade de professores: %', (
        SELECT COUNT(*)
        FROM Professor
        WHERE Cod_Dep = departamento
    );
END;
$$;

-- Visualizar procedure
CALL qtd_professores_departamento(11);

--4 Qual a distribuição de turmas por disciplina?
CREATE MATERIALIZED VIEW vw_distribuicao_turmas_disciplina AS
SELECT 
    d.Nome_Disc,
    COUNT(t.Cod_Tur) AS qtd_turmas
FROM 
    Disciplina d
    INNER JOIN Turma t ON d.Cod_Disc = t.Cod_Disc
GROUP BY 
    d.Nome_Disc;

--5 Qual o índice de aprovação de uma disciplina em um determinado semestre?
CREATE OR REPLACE PROCEDURE indice_aprovacao_disciplina(disciplina INT, semestre DATE)
LANGUAGE plpgsql AS $$
DECLARE
    qtd_aprovados INT;
    qtd_total INT;
    indice_aprovacao REAL;
BEGIN
    -- Calculando os valores
    SELECT 
        COUNT(CASE WHEN Aprovado = 'S' THEN 1 END) AS qtd_aprovados,
        COUNT(*) AS qtd_total
    INTO 
        qtd_aprovados, qtd_total
    FROM 
        Disc_Hist dh
        INNER JOIN Historico h ON dh.Cod_Hist = h.Cod_Hist
    WHERE 
        dh.Cod_Disc = disciplina AND h.Data_Inicio >= semestre AND h.Data_Final < semestre + INTERVAL '6 months';

    -- Verificando se o total não é zero para evitar divisão por zero
    IF qtd_total > 0 THEN
        indice_aprovacao := qtd_aprovados::REAL / qtd_total;
    ELSE
        indice_aprovacao := 0;  -- Caso não haja registros, o índice será 0
    END IF;

    -- Exibindo os resultados
    RAISE NOTICE 'Quantidade de aprovados: %, Quantidade total: %, Índice de aprovação: %', 
                 qtd_aprovados, qtd_total, indice_aprovacao;
END;
$$;

-- Visualizar procedure
CALL indice_aprovacao_disciplina(5, '2025-01-01'::DATE);

--6 Que alunos chegaram a três reprovações na mesma disciplina em um determinado semestre?
CREATE OR REPLACE PROCEDURE alunos_reprovados_3x(disciplina INT, semestre DATE)
LANGUAGE plpgsql AS $$
DECLARE
    rec RECORD;
    aluno_nao_encontrado BOOLEAN := TRUE;
BEGIN
    -- Itera sobre os resultados da consulta
    FOR rec IN
        SELECT 
            a.RA, 
            a.Nome_Alu, 
            a.Sobrenome_Alu
        FROM 
            Aluno a
            INNER JOIN Historico h ON a.RA = h.RA
            INNER JOIN Disc_Hist dh ON h.Cod_Hist = dh.Cod_Hist
        WHERE 
            dh.Cod_Disc = disciplina 
            AND h.Data_Inicio >= semestre 
            AND h.Data_Final < semestre + INTERVAL '6 months' 
            AND dh.Aprovado = 'N'
        GROUP BY 
            a.RA, a.Nome_Alu, a.Sobrenome_Alu
        HAVING 
            COUNT(*) >= 3
    LOOP
        -- Exibe os dados dos alunos reprovados
        RAISE NOTICE 'RA: %, Nome: %, Sobrenome: %', rec.RA, rec.Nome_Alu, rec.Sobrenome_Alu;
        aluno_nao_encontrado := FALSE;  -- Encontrou pelo menos um aluno
    END LOOP;

    -- Caso nenhum aluno tenha sido encontrado
    IF aluno_nao_encontrado THEN
        RAISE NOTICE 'Nenhum aluno reprovado 3 vezes foi encontrado para a disciplina % e semestre %.', disciplina, semestre;
    END IF;
END;
$$;

-- Visualizar procedure
CALL alunos_reprovados_3x(5, '2025-01-01');

--7 Qual a distribuição de alunos e professores por gênero na universidade?
CREATE MATERIALIZED VIEW vw_distribuicao_genero_universidade AS
SELECT 
    'Aluno' AS tipo, 
    Genero_Alu AS genero, 
    COUNT(*) AS qtd
FROM 
    Aluno
GROUP BY 
    Genero_Alu

UNION ALL

SELECT 
    'Professor' AS tipo, 
    Genero_Prof AS genero, 
    COUNT(*) AS qtd
FROM 
    Professor
GROUP BY 
    Genero_Prof;

--8 Quais turmas ainda possuem vagas (têm menos de 40 alunos)?
CREATE MATERIALIZED VIEW vw_turmas_com_vagas AS
SELECT 
    t.Cod_Tur, 
    t.Num_Alu_Tur, 
    d.Nome_Disc 
FROM 
    Turma t
    INNER JOIN Disciplina d ON t.Cod_Disc = d.Cod_Disc
WHERE 
    t.Num_Alu_Tur < 40;

--9 Quais professores ainda podem ministrar matérias? (ministram menos de 5 disciplinas)?
CREATE MATERIALIZED VIEW vw_professores_disponiveis AS
SELECT 
    p.Cod_Prof, 
    p.Nome_Prof, 
    p.Sobrenome_Prof,
    COUNT(pd.Cod_Disc) AS qtd_disciplinas
FROM 
    Professor p
    LEFT JOIN Prof_Disc pd ON p.Cod_Prof = pd.Cod_Prof
GROUP BY 
    p.Cod_Prof, p.Nome_Prof, p.Sobrenome_Prof
HAVING 
    COUNT(pd.Cod_Disc) < 5;

--10 Qual a média de todas as notas de um aluno até agora?
CREATE OR REPLACE PROCEDURE media_notas_aluno(p_ra INT)
LANGUAGE plpgsql AS $$
DECLARE
    media REAL;
BEGIN
    -- Calcula a média das notas do aluno
    SELECT AVG(Nota) 
    INTO media
    FROM 
        Disc_Hist dh
        INNER JOIN Historico h ON dh.Cod_Hist = h.Cod_Hist
    WHERE 
        h.RA = p_ra;  -- Usando a variável p_ra para evitar ambiguidade

    -- Verifica se há notas registradas
    IF media IS NULL THEN
        RAISE NOTICE 'Não há notas registradas para o aluno RA %.', p_ra;
    ELSE
        RAISE NOTICE 'A média das notas do aluno RA % é: %', p_ra, media;
    END IF;
END;
$$;

--Visualizar procedure
CALL media_notas_aluno(101);

-- IMPLEMENTAÇÕES DELETE UPDATE E BUSCAS

--1 Excluir um aluno com base no RA:
DELETE FROM aluno WHERE ra = 101;

--2 Excluir um professor com base no seu código:
DELETE FROM professor WHERE cod_prof = 6;

--3 Excluir uma disciplina com base no seu código:
DELETE FROM disciplina WHERE cod_disc = 1;

--4 Excluir um registro de histórico de aluno:
DELETE FROM historico WHERE cod_hist = 5;

--5 Excluir um endereço de aluno com base no seu código:
DELETE FROM end_alu WHERE cod_end = 233;

--6 Alterar o primeiro nome de um aluno com base no RA:
UPDATE aluno SET nome_alu = 'João' WHERE RA = 312;

--7 Alterar o status de aprovação de um aluno em uma disciplina:
UPDATE disc_hist SET aprovado = 'S' WHERE cod_disc = 3 AND cod_hist = 3;

--8 Alterar o telefone de um professor:
UPDATE professor SET tel_cel_prof = '+5571991234567' WHERE cod_prof = 2;

--9 Alterar o nome de um departamento:
UPDATE departamento SET nome_dep = 'Engenharia de Software' WHERE cod_dep = 14;

--10 Alterar o departamento a qual um curso pertence:
UPDATE curso SET cod_dep = 15 WHERE cod_curso = 32;

--11 Inserir um novo aluno:
INSERT INTO Aluno (Nome_Alu, Sobrenome_Alu, CPF_Alu, Cod_Curso) 
VALUES ('Maria', 'Oliveira', '98765432100', 33);

--12 Inserir um novo professor:
INSERT INTO Professor (Nome_Prof, Sobrenome_Prof, CPF_Prof, Cod_Dep) 
VALUES ('Carlos', 'Pereira', '11223344556', 12);

--13 Inserir um novo curso:
INSERT INTO Curso (Nome_Curso, Cod_Dep) 
VALUES ('Ciência da Computação', 13);

--14 Inserir uma nova turma para uma disciplina:
INSERT INTO turma (cod_disc, cod_prof) 
VALUES (4, 5);

--15 Inserir um novo endereço:
INSERT INTO Endereco (Logradouro, Numero, Bairro, Cidade, CEP) 
VALUES ('Rua das Flores', 123, 'Centro', 'São Paulo', '12345678');

--16 Buscar todos os alunos:
SELECT * FROM Aluno;

--17 Buscar todos os professores:
SELECT Nome_Prof, Sobrenome_Prof FROM Professor;

--18 Buscar disciplinas com base no nome:
SELECT * FROM Disciplina WHERE Nome_Disc = 'Disciplina 8';

--19 Buscar todos os cursos:
SELECT Nome_Curso FROM Curso;

--20 Buscar alunos de um curso específico:
SELECT a.Nome_Alu, a.Sobrenome_Alu
FROM Aluno a
JOIN Curso c ON a.Cod_Curso = c.Cod_Curso
WHERE c.Nome_Curso = 'Curso 7';

--21 Buscar disciplinas de um departamento específico:
SELECT d.Nome_Disc 
FROM Disciplina d
JOIN Departamento dep ON d.Cod_Dep = dep.Cod_Dep
WHERE dep.Nome_Dep = 'Departamento 6';

--22 Buscar alunos em uma disciplina específica:
SELECT DISTINCT a.Nome_Alu, a.Sobrenome_Alu
FROM Aluno a
JOIN Aluno_Disc ad ON a.RA = ad.RA
JOIN Disc_Hist dh ON ad.Cod_Disc = dh.Cod_Disc
WHERE dh.Cod_Disc = 10;

--23 Buscar os alunos e suas respectivas turmas e disciplinas:
SELECT a.Nome_Alu, t.Cod_Tur, d.Nome_Disc
FROM Aluno a
JOIN Aluno_Turma at ON a.RA = at.RA
JOIN Turma t ON at.Cod_Tur = t.Cod_Tur
JOIN Disciplina d ON t.Cod_Disc = d.Cod_Disc;

--24 Buscar o número de alunos aprovados em cada disciplina:
SELECT d.Nome_Disc, COUNT(*) AS Alunos_Aprovados
FROM Disc_Hist dh
JOIN Disciplina d ON dh.Cod_Disc = d.Cod_Disc
WHERE dh.Aprovado = 'S'
GROUP BY d.Nome_Disc;

--25 Buscar os professores e as disciplinas que lecionam com o número de alunos matriculados:
SELECT p.Nome_Prof, p.Sobrenome_Prof, d.Nome_Disc, COUNT(at.RA) AS Num_Alunos
FROM Professor p
JOIN Prof_Disc pd ON p.Cod_Prof = pd.Cod_Prof
JOIN Disciplina d ON pd.Cod_Disc = d.Cod_Disc
LEFT JOIN Aluno_Turma at ON at.Cod_Tur = d.Cod_Disc
GROUP BY p.Nome_Prof, p.Sobrenome_Prof, d.Nome_Disc;
